CREATE TABLE users (
	id BIGSERIAL,

	-- data
	name TEXT UNIQUE NOT NULL,
	pass TEXT NOT NULL, -- lowercase sha1
	admin BOOL NOT NULL DEFAULT FALSE,
	nodelete BOOL NOT NULL DEFAULT FALSE,

	PRIMARY KEY (id),
	CONSTRAINT pass_hash CHECK (pass ~ '[0-9a-f]{40}')
);

CREATE TABLE quotes (
	id BIGSERIAL,

	-- data
	quote TEXT UNIQUE NOT NULL,
	flag BOOL NOT NULL DEFAULT FALSE,
	hide BOOL NOT NULL DEFAULT FALSE,

	-- metadata
	ts TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	users_id BIGINT,
	ip INET NOT NULL,
	quote_idx TSVECTOR,

	PRIMARY KEY (id),
	FOREIGN KEY (users_id) REFERENCES users (id) ON UPDATE CASCADE ON DELETE SET NULL
);
CREATE INDEX quotes_users_id ON quotes (users_id);
CREATE INDEX quotes_ip ON quotes (ip);
CREATE INDEX quotes_flag ON quotes (flag);
CREATE INDEX quotes_hide ON quotes (hide);
CREATE INDEX quotes_quote_idx ON quotes USING GIST(quote_idx);
CREATE TRIGGER quotes_idx BEFORE UPDATE OR INSERT ON quotes
	FOR EACH ROW EXECUTE PROCEDURE tsearch2(quote_idx, quote);

CREATE TABLE tags (
	id BIGSERIAL,

	-- data
	name TEXT UNIQUE NOT NULL,

	-- metadata
	ts TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	users_id BIGINT,
	ip INET NOT NULL,

	PRIMARY KEY (id),
	FOREIGN KEY (users_id) REFERENCES users (id) ON UPDATE CASCADE ON DELETE SET NULL
);
CREATE INDEX tags_users_id ON tags (users_id);
CREATE INDEX tags_ip ON tags (ip);

CREATE TABLE quotes_tags (
	-- data
	quotes_id BIGINT NOT NULL,
	tags_id BIGINT NOT NULL,

	-- metadata
	ts TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	users_id BIGINT,
	ip INET NOT NULL,

	PRIMARY KEY (quotes_id, tags_id),
	FOREIGN KEY (quotes_id) REFERENCES quotes (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (tags_id) REFERENCES tags (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (users_id) REFERENCES users (id) ON UPDATE CASCADE ON DELETE SET NULL
);
CREATE INDEX quotes_tags_quotes_id ON quotes_tags (quotes_id);
CREATE INDEX quotes_tags_tags_id ON quotes_tags (tags_id);

CREATE TABLE votes (
	-- data
	quotes_id BIGINT NOT NULL,
	good BOOL NOT NULL,

	-- metadata
	ts TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	users_id BIGINT,
	ip INET NOT NULL,

	FOREIGN KEY (quotes_id) REFERENCES quotes (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (users_id) REFERENCES users (id) ON UPDATE CASCADE ON DELETE SET NULL
);
CREATE INDEX votes_quotes_id ON votes (quotes_id);
CREATE INDEX votes_ip_ts ON votes (ip, ts DESC);
CREATE INDEX votes_users_id_ts ON votes (users_id, ts DESC);
CREATE INDEX votes_quotes_id_vote_up ON votes (quotes_id) WHERE good;
CREATE INDEX votes_quotes_id_vote_down ON votes (quotes_id) WHERE NOT good;

CREATE VIEW rated_quotes AS SELECT quotes.*,
	(SELECT COUNT(quotes_id) FROM votes WHERE votes.quotes_id = quotes.id AND good)
	- (SELECT COUNT(quotes_id) FROM votes WHERE votes.quotes_id = quotes.id AND NOT good)
	AS rating FROM quotes;
